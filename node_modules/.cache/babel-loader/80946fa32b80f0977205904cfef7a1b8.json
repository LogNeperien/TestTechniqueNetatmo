{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\D E L L\\\\Desktop\\\\ING4\\\\Web\\\\TestNetatmo\\\\my_app\\\\src\\\\javascript\\\\components\\\\DayTemperature.jsx\";\nimport React, { Component } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport { SquareLoader } from \"./SpinLoader\";\nimport Select from \"react-select\";\nconst optionsType = [{\n  value: 'temperature',\n  label: 'temperature'\n}, {\n  value: 'humidity',\n  label: 'humidity'\n}, {\n  value: 'airPollution',\n  label: 'air pollution'\n}];\nconst option = [\"user\", \"sensor\", \"measure\"];\n\nclass DayTemperature extends Component {\n  constructor(props) {\n    super(props);\n    this.data = [];\n    this.state = {\n      waiting: true,\n      //user\n      valuePays: \"\",\n      valuePersonInHouse: 0,\n      valueHouseSize: \"\",\n      //sensor\n      selectedOptionSelect: null,\n      valueLocation: \"\",\n      //measure\n      valueSensor: 0,\n      valueType: \"\",\n      valueValue: 0 //select\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({\n      [nam]: val\n    });\n  }\n\n  squareLoader() {\n    const mode = this.props.mode;\n    return React.createElement(SquareLoader, {\n      mode: mode,\n      bgLight: '#DA5367',\n      bgDark: '#78BEFF',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          xs = _this$props.xs,\n          sm = _this$props.sm,\n          md = _this$props.md,\n          lg = _this$props.lg,\n          xl = _this$props.xl,\n          mode = _this$props.mode;\n    const selectedOption = this.props.selectedOption;\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"my-0 font-weight-normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Hier\")), React.createElement(\"div\", {\n      class: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"43\\xB0C\"));\n  }\n\n}\n\nexport default DayTemperature;","map":{"version":3,"sources":["C:/Users/D E L L/Desktop/ING4/Web/TestNetatmo/my_app/src/javascript/components/DayTemperature.jsx"],"names":["React","Component","Col","SquareLoader","Select","optionsType","value","label","option","DayTemperature","constructor","props","data","state","waiting","valuePays","valuePersonInHouse","valueHouseSize","selectedOptionSelect","valueLocation","valueSensor","valueType","valueValue","handleChange","bind","event","nam","target","name","val","setState","squareLoader","mode","render","xs","sm","md","lg","xl","selectedOption"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,SAAQC,YAAR,QAA2B,cAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAGA,MAAMC,WAAW,GAAG,CAChB;AAAEC,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,KAAK,EAAE;AAA/B,CADgB,EAEhB;AAAED,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAFgB,EAGhB;AAAED,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,KAAK,EAAE;AAAhC,CAHgB,CAApB;AAMA,MAAMC,MAAM,GAAG,CACX,MADW,EAEX,QAFW,EAGX,SAHW,CAAf;;AAOA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAKnCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAFnBC,IAEmB,GAFZ,EAEY;AAGf,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,IADA;AAET;AACAC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,kBAAkB,EAAE,CAJX;AAKTC,MAAAA,cAAc,EAAE,EALP;AAMT;AACAC,MAAAA,oBAAoB,EAAG,IAPd;AAQTC,MAAAA,aAAa,EAAG,EARP;AAST;AACAC,MAAAA,WAAW,EAAG,CAVL;AAWTC,MAAAA,SAAS,EAAG,EAXH;AAYTC,MAAAA,UAAU,EAAG,CAZJ,CAaT;;AAbS,KAAb;AAgBA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAGDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAChB,QAAIC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAAvB;AACA,QAAIC,GAAG,GAAGJ,KAAK,CAACE,MAAN,CAAarB,KAAvB;AACA,SAAKwB,QAAL,CAAc;AAAC,OAACJ,GAAD,GAAOG;AAAR,KAAd;AACH;;AAEDE,EAAAA,YAAY,GAAG;AAAA,UACJC,IADI,GACI,KAAKrB,KADT,CACJqB,IADI;AAEX,WAAO,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEA,IAApB;AAA0B,MAAA,OAAO,EAAE,SAAnC;AAA8C,MAAA,MAAM,EAAE,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAGDC,EAAAA,MAAM,GAAG;AAAA,wBAC8B,KAAKtB,KADnC;AAAA,UACEuB,EADF,eACEA,EADF;AAAA,UACMC,EADN,eACMA,EADN;AAAA,UACUC,EADV,eACUA,EADV;AAAA,UACcC,EADd,eACcA,EADd;AAAA,UACkBC,EADlB,eACkBA,EADlB;AAAA,UACsBN,IADtB,eACsBA,IADtB;AAAA,UAEGO,cAFH,GAEsB,KAAK5B,KAF3B,CAEG4B,cAFH;AAIL,WAEA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,EAMI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,CAFA;AAaH;;AAzDkC;;AA2DvC,eAAe9B,cAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Col} from \"react-bootstrap\";\r\nimport {SquareLoader} from \"./SpinLoader\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst optionsType = [\r\n    { value: 'temperature', label: 'temperature' },\r\n    { value: 'humidity', label: 'humidity' },\r\n    { value: 'airPollution', label: 'air pollution' }\r\n  ]\r\n\r\nconst option = [\r\n    \"user\",\r\n    \"sensor\",\r\n    \"measure\"\r\n];\r\n\r\n\r\nclass DayTemperature extends Component {\r\n\r\n\r\n    data = [];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            waiting: true,\r\n            //user\r\n            valuePays: \"\",\r\n            valuePersonInHouse: 0,\r\n            valueHouseSize: \"\",\r\n            //sensor\r\n            selectedOptionSelect : null,\r\n            valueLocation : \"\",\r\n            //measure\r\n            valueSensor : 0,\r\n            valueType : \"\",\r\n            valueValue : 0,\r\n            //select\r\n\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        let nam = event.target.name;\r\n        let val = event.target.value;\r\n        this.setState({[nam]: val});\r\n    }\r\n\r\n    squareLoader() {\r\n        const {mode} = this.props;\r\n        return(<SquareLoader mode={mode} bgLight={'#DA5367'} bgDark={'#78BEFF'}/>);\r\n    }\r\n\r\n   \r\n    render() {\r\n        const {xs, sm, md, lg, xl, mode} = this.props;\r\n        const { selectedOption } = this.props;\r\n\r\n        return(\r\n            \r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <h4 className=\"my-0 font-weight-normal\">\r\n                    Hier\r\n                </h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                43Â°C  \r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default DayTemperature;"]},"metadata":{},"sourceType":"module"}